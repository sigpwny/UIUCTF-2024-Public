apiVersion: v1
kind: ServiceAccount
metadata:
  name: status-discord-webhook
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: status-discord-webhook-role
rules:
  - apiGroups: ["*"]
    resources:
      - namespaces
      - deployments
      - pods
    verbs:
      - get
      - list
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: status-discord-webhook-role-binding
subjects:
  - kind: ServiceAccount
    name: status-discord-webhook
    namespace: default
roleRef:
  kind: ClusterRole
  name: status-discord-webhook-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: status-discord-webhook
  namespace: default
  labels:
    app: status-discord-webhook
spec:
  selector:
    matchLabels:
      app: status-discord-webhook
  template:
    metadata:
      labels:
        app: status-discord-webhook
    spec:
      containers:
        - name: bot
          image: us-central1-docker.pkg.dev/<GCP PROJECT ID>/status-bot/bot@sha256:1f0e4ac1428f5ecd38b380ff2bb6ae75bd9feded248156a5a6cc8a4051dc996d
          env:
            - name: MESSAGE_ID
              value: '1256400364329107539'
          envFrom:
            - secretRef:
                name: status-discord-webhook-secrets
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      serviceAccountName: status-discord-webhook
